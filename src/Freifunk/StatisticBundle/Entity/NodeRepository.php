<?php

namespace Freifunk\StatisticBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * NodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NodeRepository extends EntityRepository
{

    /**
     * @param string $mac
     *
     * @return Node
     */
    public function findByMac($mac)
    {
        $qb = $this->createQueryBuilder("n");
        $qb->andWhere($qb->expr()->eq("n.mac", $qb->expr()->literal($mac)));

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Finds one or multiple nodes by their name(s)
     *
     * @param mixed $node
     *
     * @return array
     *
     * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
     */
    public function findByNodeName($node)
    {
        if (is_null($node)) {
            throw new NotFoundHttpException('Keine Knoten angegeben.');
        }

        $nodes = (!is_array($node)) ? array($node) : $node;

        $qb = $this->createQueryBuilder('n');
        $qb->andWhere($qb->expr()->in('n.nodeName', $nodes));

        return $qb->getQuery()->getResult();
    }

    /**
     * Counts all nodes in the database.
     *
     * @return mixed Number of nodes
     */
    public function countAllNodes()
    {
        $manager = $this->getEntityManager();
        $query = $manager->createQuery('SELECT COUNT(n.id) FROM FreifunkStatisticBundle:Node n');
        $count = $query->getSingleScalarResult();

        return $count;
    }

}
