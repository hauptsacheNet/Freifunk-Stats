<?php

namespace Freifunk\StatisticBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UpdateLogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UpdateLogRepository extends EntityRepository
{
    /**
     * Finds all logs after $timestamp
     *
     * @param \DateTime $timestamp
     *
     * @return mixed
     */
    public function findLogsAfter(\DateTime $timestamp)
    {
        $manager = $this->getEntityManager();
        $query = $manager->createQuery(
            'SELECT COUNT(l.id) FROM FreifunkStatisticBundle:UpdateLog l WHERE l.fileTime > ?1'
        );
        $count = $query->setParameter(1, $timestamp)->getSingleScalarResult();

        return $count;
    }

    /**
     * Finds the `.json` filesize of multiple logs
     *
     * @param \DateTime $timestamp
     *
     * @return mixed
     */
    public function findLogSizeAfter(\DateTime $timestamp)
    {
        $manager = $this->getEntityManager();
        $query = $manager->createQuery(
            'SELECT SUM(l.fileSize) FROM FreifunkStatisticBundle:UpdateLog l WHERE l.fileTime > ?1'
        );
        $count = $query->setParameter(1, $timestamp)->getSingleScalarResult();

        return $count;
    }

    /**
     * Gets the last log entry
     *
     * @return UpdateLog
     */
    public function getLastEntry()
    {
        $qb = $this->createQueryBuilder('l');
        $qb->orderBy('l.fileTime', 'DESC');
        $qb->setMaxResults(1);

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Gets the last log entry
     *
     * @return UpdateLog
     */
    public function getLastSuccessfulEntry()
    {
        $qb = $this->createQueryBuilder('l');
        $qb->andWhere($qb->expr()->isNotNull('l.fileTime'));
        $qb->orderBy('l.fileTime', 'DESC');
        $qb->setMaxResults(1);

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Returns the last $limit logs
     *
     * @param int $limit number of logs
     *
     * @return array
     */
    public function findLastLogs($limit = 10)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT l FROM FreifunkStatisticBundle:UpdateLog l ORDER BY l.id DESC')
            ->setMaxResults($limit)
            ->getResult();
    }
}
